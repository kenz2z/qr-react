{"version":3,"sources":["App.js","reportWebVitals.js","Ken.js","index.js"],"names":["useStyles","makeStyles","theme","conatiner","marginTop","title","display","justifyContent","alignItems","background","color","padding","btn","marginBottom","App","_this","this","_useState","useState","_useState2","Object","slicedToArray","text","setText","_useState3","_useState4","imageUrl","setImageUrl","_useState5","_useState6","_useState7","_useState8","scanResultWebCam","setScanResultWebCam","_useState9","_useState10","joke","_useState11","_useState12","_useState13","_useState14","result","setResult","classes","generateQrCode","useRef","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","QRCode","toDataURL","sent","t0","console","log","stop","apply","arguments","react_default","a","createElement","Container","className","Card","CardContent","Grid","container","spacing","item","xl","lg","md","sm","xs","TextField","label","onChange","e","target","value","Button","variant","onClick","href","download","src","alt","lib_default","delay","style","width","onError","error","onScan","URLe","split_string","split","shift","toString","action","method","onSubmit","event","preventDefault","form","$","ajax","type","url","attr","data","serialize","success","handleSumbit","htmlFor","id","name","fetch","baseURL","then","json","etherscanData","key","hasOwnProperty","tokenID","blockNumber","getTxn","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","Ken","setJoke","sum","ReactDOM","render","StrictMode","src_App","src_Ken","document","getElementById"],"mappings":"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","file":"static/js/main.98be7d2b.chunk.js","sourcesContent":["import React, {useState, useRef} from 'react';\nimport {Container, Card, CardContent, makeStyles, Grid, TextField, Button} from '@material-ui/core';\nimport QRCode from 'qrcode';\nimport QrReader from 'react-qr-reader';\nimport $ from \"jquery\";\n\n\n\nfunction App() { \n  const [text, setText] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [scanResultFile, setScanResultFile] = useState('');\n  const [scanResultWebCam, setScanResultWebCam] =  useState('');\n  const [joke,setJoke ]= useState(\"\");\n  //ken add\n  const [name, setName] = useState(\"\");\n\tconst [result, setResult] = useState(\"\");\n  //\n\n  const classes = useStyles();\n  const qrRef = useRef(null);\n\n\n  const generateQrCode = async () => {\n    try {\n          const response = await QRCode.toDataURL(text);\n          setImageUrl(response);\n    }catch (error) {\n      console.log(error);\n    }\n  }\n  const handleErrorFile = (error) => {\n    console.log(error);\n  }\n  const handleScanFile = (result) => {\n      if (result) {\n          setScanResultFile(result);\n      }\n  }\n  const onScanFile = () => {\n    qrRef.current.openImageDialog();\n  }\n  const handleErrorWebCam = (error) => {\n    console.log(error);\n  }\n  const handleScanWebCam = (result) => {\n    if (result){\n      console.log(\"start\")\n      let URLe=result;\n      console.log(\"1:\"+URLe)\n\n      let split_string = URLe.split(\":\");\n      split_string.shift();\n      console.log(\"2:\"+split_string)\n      URLe = split_string.toString();\n      split_string = URLe.split(\"@\");\n      console.log(\"3: +\"+split_string);\n      URLe = split_string[0].toString();\n      console.log(\"4: +\"+URLe);\n\n        setScanResultWebCam(URLe);\n\n\n\n    }\n   }\n\n\n\n\n     //<ken add >\n\n  const handleChange = (e) => {\n      setName(e.target.value);\n    };\n  \n  const handleSumbit = (e) => {\n    e.preventDefault();\n    const form = $(e.target);\n    $.ajax({\n       type: \"POST\",\n       url: form.attr(\"action\"),\n       data: form.serialize(),\n       success(data) {\n         setResult(data);\n      },\n    });\n   };\n   // ken add\n   const getJoke= () =>{\n\t\tlet baseURL='https://api.etherscan.io/api?module=account&action=tokennfttx&contractaddress=';\n\t\tlet contractAddress='0x7b8c062C9B8cbD756785E444FDcFCa79342a8Ee5';\n\t\tlet userAddress='&address=0xb3f678A06d688D0a90787914f94d051b445b50C3';\n\t\tlet block='&page=1&offset=100&startblock=0&endblock=27025780&sort=asc';\n\t\tlet API_KEY='MU7II9KNAHCJFU46FFD7PH5XVR6RY5I3RE';\n\t\tlet apiURL = baseURL +contractAddress+userAddress+block+API_KEY;\n\t\tfetch(apiURL)\n\t\t.then((response)=> response.json())\n\t\t.then((data)=>{\n\t\t\tlet etherscanData = data.result;\n\t\tconsole.log(etherscanData)\n\t\tlet sum=\"\"\n\t\t\tfor (var key in etherscanData) {\n\t\t\t\tif (etherscanData.hasOwnProperty(key)) {\n\t\t\t\t\tconsole.log(key + \" -> \" + etherscanData[key].tokenID);\n\t\t\t\t\tsum+=(\"blockNumber:\"+etherscanData[key].blockNumber+\"tokenID :\"+etherscanData[key].tokenID+\"<br>\");\n\t\t\t\t}\n\t\t\t}\n\t\t\t// setJoke(sum)\n\t\t});\n\t};\n\n  return (\n    <Container className={classes.conatiner}>\n          <Card>\n              <h2 className={classes.title}>Generate Download & Scan QR Code with React js</h2>\n              <CardContent>\n                  <Grid container spacing={2}>\n                      <Grid item xl={4} lg={4} md={6} sm={12} xs={12}>\n                          <TextField label=\"Enter Text Here\" onChange={(e) => setText(e.target.value)}/>\n                          <Button className={classes.btn} variant=\"contained\" \n                            color=\"primary\" onClick={() => generateQrCode()}>Generate</Button>\n                            <br/>\n                            <br/>\n                            <br/>\n                            {imageUrl ? (\n                              <a href={imageUrl} download>\n                                  <img src={imageUrl} alt=\"img\"/>\n                              </a>) : null}\n                      </Grid>\n                      {/* <Grid item xl={4} lg={4} md={6} sm={12} xs={12}>\n                        <Button className={classes.btn} variant=\"contained\" color=\"secondary\" onClick={onScanFile}>Scan Qr Code</Button>\n                        <QrReader\n                          ref={qrRef}\n                          delay={300}\n                          style={{width: '100%'}}\n                          onError={handleErrorFile}\n                          onScan={handleScanFile}\n                          legacyMode\n                        />\n                        <h3>Scanned Code: {scanResultFile}</h3>\n                      </Grid> */}\n                      <Grid item xl={4} lg={4} md={6} sm={12} xs={12}>\n                         <h3>Qr Code Scan by Web Cam</h3>\n                         <QrReader\n                         delay={300}\n                         style={{width: '100%'}}\n                         onError={handleErrorWebCam}\n                         onScan={handleScanWebCam}\n                        \n                         />\n                         <h3>Scanned By WebCam Code: {scanResultWebCam}</h3>\n                    \n                      </Grid>\n                  </Grid>\n              </CardContent>\n          </Card>\n          <div className=\"App\">\n\t\t\t<form\n\t\t\t\taction=\"http://localhost/reactphp/server.php\"\n\t\t\t\tmethod=\"post\"\n\t\t\t\tonSubmit={(event) => handleSumbit(event)}\n\t\t\t>\n\t\t\t\t<label htmlFor=\"name\">Nametest: </label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tid=\"name\"\n\t\t\t\t\tname=\"name\"\n\t\t\t\t\t// value={scanResultWebCam}\n\t\t\t\t\t// onChange={(event) => handleChange(event)}\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<button type=\"submit\" >Submit</button>\n        <button onClick={getJoke}>get URL</button>\n        {joke}\n\t\t\t</form>\n\t\t\t<h1>{result}</h1>\n\t\t</div>\n\n    <div>\n\n  <button onClick={() =>{this.getTxn()}}>check API</button>\n    </div>\n    </Container>\n    \n  );\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n    conatiner: {\n      marginTop: 10\n      \n    },\n    title: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems:  'center',\n      background: '#3f51b5',\n      color: '#fff',\n      padding: 20\n      \n    },\n    btn : {\n      marginTop: 10,\n      marginBottom: 20\n    }\n}));\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React ,{useState} from \"react\";\r\n//import Axios from\"axios\";\r\nimport \"./App.css\";\r\n\r\nfunction Ken(){\r\n\tconst [url1,setURL]= useState(\"\");\r\n\tconst [joke,setJoke ]= useState(\"\");\r\n\t\r\n\tconst getJoke= () =>{\r\n\t\tlet baseURL='https://api.etherscan.io/api?module=account&action=tokennfttx&contractaddress=';\r\n\t\tlet contractAddress='0x7b8c062C9B8cbD756785E444FDcFCa79342a8Ee5';\r\n\t\tlet userAddress='&address=0xb3f678A06d688D0a90787914f94d051b445b50C3';\r\n\t\tlet block='&page=1&offset=100&startblock=0&endblock=27025780&sort=asc';\r\n\t\tlet API_KEY='MU7II9KNAHCJFU46FFD7PH5XVR6RY5I3RE';\r\n\t\tlet apiURL = baseURL +contractAddress+userAddress+block+API_KEY;\r\n\t\tfetch(apiURL)\r\n\t\t.then((response)=> response.json())\r\n\t\t.then((data)=>{\r\n\t\t\tlet etherscanData = data.result;\r\n\t\tconsole.log(etherscanData)\r\n\t\tlet sum=\"\"\r\n\t\t\tfor (var key in etherscanData) {\r\n\t\t\t\tif (etherscanData.hasOwnProperty(key)) {\r\n\t\t\t\t\tconsole.log(key + \" -> \" + etherscanData[key].tokenID);\r\n\t\t\t\t\tsum+=(\"blockNumber:\"+etherscanData[key].blockNumber+\"tokenID :\"+etherscanData[key].tokenID+\"<br>\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsetJoke(sum)\r\n\t\t});\r\n\t};\r\n\tconst filterEthAddress= ()=>{\r\n\t\tlet URLe=\"ethereum:0xb3f678A06d688D0a90787914f94d051b445b50C3@1\";\r\n\t\tlet split_string = URLe.split(\":\");\r\n\t\tsplit_string.shift();\r\n\t\tURLe = split_string.toString();\r\n\t\tsplit_string = URLe.split(\"@\");\r\n\t\tconsole.log(split_string);\r\n\t\tURLe = split_string.toString();\r\n\t\tsetURL(URLe)\r\n\t}\r\n\t\r\n\treturn (\r\n\t <div>\r\n\t   <button onClick={getJoke}>get JSON</button>\r\n\t {joke}\r\n\t {/* <button onClick={filterEthAddress()}>get URL</button>\r\n\t  {url1}  */}\r\n\r\n\t </div>\r\n\r\n\t);\r\n\t\r\n}\r\nexport default Ken;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Ken from './Ken';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <Ken/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}